---

- include: multi_os.yml

- include_tasks: RedHat.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora'

- name: Install system requirements for docker-py
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ docker_py_deps }}"

- name: install docker-py requirement to manage containers
  pip:
    name: docker-py
    state: present

- name: "Create the {{ nginx_base_directory }} directory on the host"
  become: yes
  file:
    path: "{{ nginx_base_directory }}"
    state: 'directory'
    mode: '0755'

- name: 'Put the nginx.conf file in place'
  become: yes
  copy:
    content: "{{ nginx_conf }}"
    dest: "{{ nginx_base_directory }}/nginx.conf"
    mode: '0644'
  notify: 'restart-docker-nginx'

- name: "Copy the default html contents to {{ nginx_base_directory }}/defaults on the host"
  become: yes
  copy:
    src: "{{ nginx_static_html_directory }}/"
    dest: "{{ nginx_base_directory }}/defaults"
    mode: '0644'
  notify: 'restart-docker-nginx'

- name: create directory for conf.d nginx
  file:
    path: "{{ nginx_reverse_proxy_config_directory }}"
    state: directory

- name: deploy reverse proxy configurations
  template:
    src: reverse-proxy.conf.j2
    dest: "{{ nginx_reverse_proxy_config_directory }}/{{ item.config_name }}.conf"
  with_items: "{{ nginx_reverse_proxy_proxies }}"
  notify: 'restart-docker-nginx'

- name: deploy reverse proxy configurations ssl
  template:
    src: reverse-proxy-ssl.conf.j2
    dest: "{{ nginx_reverse_proxy_config_directory }}/{{ item.config_name }}.conf"
  with_items: "{{ nginx_reverse_proxy_proxies_ssl }}"
  notify: 'restart-docker-nginx'

- name: deploy custom conf files
  template:
    src: custom-config.conf.j2
    dest: "{{ nginx_reverse_proxy_config_directory }}/{{ item.config_name }}.conf"
  with_items: "{{ nginx_custom_conf }}"
  notify: 'restart-docker-nginx'

- name: 'Start the nginx docker container'
  become: yes
  docker_container:
    image: "nginx:{{ nginx_docker_tag }}"
    name: "{{ nginx_container_name }}"
    volumes: '{{ nginx_exposed_volumes }}'
    ports: '{{ nginx_published_ports }}'
    exposed_ports: '{{ nginx_exposed_ports }}'
    state: 'started'
    restart_policy: 'always'
    log_driver: 'syslog'
    log_options:
      tag: "{{ nginx_container_name }}"

- meta: flush_handlers

- include_tasks: test.yml
